
#Область ФормированиеСпискаБаз

Процедура ОбновитьСписокБаз(Параметры = Неопределено) Экспорт
	
	Режимы	= Ар_ИнформационныеБазыКлиент.СписокРежимовОбновленияСпискаБаз();
	
	Если Параметры = Неопределено Тогда
		
		Параметры 		= Ар_ИнформационныеБазыКлиент.ИнициализироватьПараметрыСпискаБаз();
		Параметры.Режим = Режимы.ОбновитьОбязательныеРеквизиты;
		
	КонецЕсли;
	
	СоответствиеДанных 	= Новый Соответствие;
	МассивКолонок 		= Новый Массив;
	МассивФайлов 		= ПолучитьМассивСписокБазФайлов();
	
	//заполним колонки
	МассивКолонок.Добавить("Name");
	
	Для Каждого Файл Из МассивФайлов Цикл
		
		ТекстовыйДокумент 	= Новый ТекстовыйДокумент();
		ТекстовыйДокумент.Прочитать(Файл.ПолноеИмя);
		КоличествоСтрок 	= ТекстовыйДокумент.КоличествоСтрок();
		
		Для Счетчик = 1 По КоличествоСтрок Цикл
			
			Строка = ТекстовыйДокумент.ПолучитьСтроку(Счетчик);
			
			Если СтрНайти(Строка, "[") > 0 Тогда
				
			ИначеЕсли СтрНайти(Строка, "=") > 0 Тогда
				
				НомерКлюча 	= СтрНайти(Строка, "=");
				Ключ 		= Сред(Строка, 1, НомерКлюча - 1);
				
				Если МассивКолонок.Найти(Ключ) = Неопределено Тогда
					МассивКолонок.Добавить(Ключ);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	//Заполним данные
	Для Каждого Файл Из МассивФайлов Цикл
		
		ТекстовыйДокумент 	= Новый ТекстовыйДокумент();
		ТекстовыйДокумент.Прочитать(Файл.ПолноеИмя);
		КоличествоСтрок 	= ТекстовыйДокумент.КоличествоСтрок();
		ТекущаяБаза			= "";
		СтруктураБазы		= Новый Структура;
				
		Для Счетчик = 1 По КоличествоСтрок Цикл
			
			Строка = ТекстовыйДокумент.ПолучитьСтроку(Счетчик);
			
			Если СтрНайти(Строка, "[") > 0 Тогда
				
				Если ЗначениеЗаполнено(ТекущаяБаза)
					И СтруктураБазы.Количество() > 0 Тогда
					
					СтруктураБазы.Name = ТекущаяБаза;

					СоответствиеДанных[СтруктураБазы.ID] = СтруктураБазы;
					
				КонецЕсли;
				
				ТекущаяБаза 	= Строка;
				ТекущаяБаза		= СтрЗаменить(ТекущаяБаза, "[", "");
				ТекущаяБаза		= СтрЗаменить(ТекущаяБаза, "]", "");
				
				СтруктураБазы	= Новый Структура;
				
				Для Каждого Колонка Из МассивКолонок Цикл
					СтруктураБазы.Вставить(Колонка);
				КонецЦикла;
				
			ИначеЕсли СтрНайти(Строка, "=") > 0 Тогда
				
				НомерКлюча 	= СтрНайти(Строка, "=");
				Ключ 		= Сред(Строка, 1, НомерКлюча - 1);
				Значение	= Сред(Строка, НомерКлюча + 1);
				
				СтруктураБазы.Вставить(Ключ, Значение);
				
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ТекущаяБаза)
			И СтруктураБазы.Количество() > 0 Тогда
			
			СтруктураБазы.Name = ТекущаяБаза;
			
			СоответствиеДанных[СтруктураБазы.ID] = СтруктураБазы;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Данные = Новый Структура();
	Данные.Вставить("МассивКолонок", МассивКолонок);
	Данные.Вставить("СоответствиеДанных", СоответствиеДанных);
	Данные.Вставить("Параметры", Параметры);
	Данные.Вставить("Режимы", Режимы);
	
	Ар_ИнформационныеБазыВызовСервера.ОбновитьСписокБаз(Данные);
	
КонецПроцедуры

Функция ПолучитьМассивСписокБазФайлов()
	
	Массив = Новый Массив;
	
	МассивФайловВсехПользователей 	= НайтиФайлы("C:\ProgramData\1C\1CEStart\", "*.v8i", Истина);
	МассивФайловПользователя 		= НайтиФайлы(ПолучитьКаталогССпискомБазПользователя(), "*.v8i", Истина);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Массив, МассивФайловВсехПользователей);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Массив, МассивФайловПользователя);
	
	Возврат Массив
	
КонецФункции

Функция ПолучитьКаталогССпискомБазПользователя()
	
	Путь			= "";
	РабочийКаталог 	= РабочийКаталогДанныхПользователя();
	МассивПодстрок	= СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(РабочийКаталог, "\", Истина);
	Счетчик			= 0;
	
	Пока МассивПодстрок[Счетчик] <> "1C"
		И Счетчик <= МассивПодстрок.Количество() - 1 Цикл
		
		Если Не ЗначениеЗаполнено(Путь) Тогда
			Путь 	= МассивПодстрок[Счетчик];
		Иначе
			Путь 	= СтрШаблон("%1\%2", Путь, МассивПодстрок[Счетчик]);
		КонецЕсли;
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Путь = СтрШаблон("%1\1C\1CEStart\", Путь);
	
	Возврат Путь
	
КонецФункции

Функция ИнициализироватьПараметрыСпискаБаз() Экспорт
	
	Структура = Новый Структура();
	Структура.Вставить("Режим");
	
	Возврат Структура
	
КонецФункции

Функция СписокРежимовОбновленияСпискаБаз() Экспорт
	
	Список = Новый Структура;
	Список.Вставить("ОбновитьВсе", "ОбновитьВсе");
	Список.Вставить("ОбновитьОбязательныеРеквизиты", "ОбновитьОбязательныеРеквизиты");
	
	Возврат Список
	
КонецФункции

#КонецОбласти

#Область ФормированиеДанныхДляКоманд

Процедура ЗапуститьПредриятие(ИнформационнаяБаза, ПараметрыПереопределения = Неопределено) Экспорт
	
	ДанныеКоманды 	= ПолучитьДанныеФормированияКоманды(ИнформационнаяБаза, "ENTERPRISE");
	
	//переопределим данные запуска
	Если ПараметрыПереопределения <> Неопределено Тогда
			
	КонецЕсли;
	
	Команда			= Ар_РаботаСКоманднойСтрокойКлиентСервер.ПолучитьКомандуПоДаннымИнформационнойСистемы(ДанныеКоманды);
	
	ЗапуститьПриложение(Команда);
	
КонецПроцедуры

Процедура ЗапуститьКонфигуратор(ИнформационнаяБаза, ПараметрыПереопределения = Неопределено) Экспорт
	
	ДанныеКоманды 	= ПолучитьДанныеФормированияКоманды(ИнформационнаяБаза, "DESIGNER");
	
	//переопределим данные запуска
	Если ПараметрыПереопределения <> Неопределено Тогда
			
	КонецЕсли;
	
	Команда			= Ар_РаботаСКоманднойСтрокойКлиентСервер.ПолучитьКомандуПоДаннымИнформационнойСистемы(ДанныеКоманды);
	
	ЗапуститьПриложение(Команда);
	
КонецПроцедуры

Функция ПолучитьДанныеФормированияКоманды(ИнформационнаяБаза, Режим)
	
	ДанныеКоманды 					= Ар_ИнформационныеБазыВызовСервера.ПолучитьДанныеФормированияКоманды(ИнформационнаяБаза, Режим);
	ДанныеКоманды.Платформа.Путь 	= ПолучитьПутьК1С(ДанныеКоманды.Платформа.Версия1С, ДанныеКоманды.Разрядность);
	
	Возврат ДанныеКоманды
	
КонецФункции

Функция ПолучитьПутьК1С(Версия, Разрядность) Экспорт
	
	Путь = "";
	
	Путь_83_64 = "C:\Program Files\1cv8";
	Путь_83_32 = "C:\Program Files (x86)\1cv8";
	Путь_82_32 = "C:\Program Files (x86)\1cv82";
	
	Путь_83_64_common = "C:\Program Files\1cv8\common\1cestart.exe";
	Путь_83_32_common = "C:\Program Files (x86)\1cv8\common\1cestart.exe";
	Путь_82_32_common = "C:\Program Files (x86)\1cv82\common\1cestart.exe";
	
	МассивКаталогов = Новый Массив;
	МассивКаталогов.Добавить(Путь_83_64);
	МассивКаталогов.Добавить(Путь_83_32);
	МассивКаталогов.Добавить(Путь_82_32);
	
	МассивПутей 		= Новый Массив;
	МассивПутейCommon 	= Новый Массив;
	
	//добавляем каталоги
	Для Каждого Каталог Из МассивКаталогов Цикл
		
		МассивВерсий = НайтиФайлы(Каталог, "1cv8.exe", Истина);
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПутей, МассивВерсий);
		
	КонецЦикла;
	
	//фильтруем по версии
	МассивПутейФильтр = Новый Массив;
	
	Если ЗначениеЗаполнено(Версия) Тогда
		
		Для Каждого Файл Из МассивПутей Цикл
			Если СтрНайти(Файл.Путь, Версия) > 0 Тогда
				МассивПутейФильтр.Добавить(Файл);
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	МассивПутей = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПутей, МассивПутейФильтр);

	//фильтруем по разрядность
	МассивПутейФильтр = Новый Массив;
	
	Если Разрядность = ПредопределенноеЗначение("Перечисление.Ар_Разрядность.x64") Тогда
		
		МассивПоРазрядности = Новый Массив;
		МассивПоРазрядности.Добавить(Путь_83_64);
		
		МассивПутейCommonФильтр = Новый Массив;
		МассивПутейCommonФильтр.Добавить(Путь_83_64_common);
		
	ИначеЕсли Разрядность = ПредопределенноеЗначение("Перечисление.Ар_Разрядность.x86") Тогда
		
		МассивПоРазрядности = Новый Массив;
		МассивПоРазрядности.Добавить(Путь_83_32);
		МассивПоРазрядности.Добавить(Путь_82_32);
		
		МассивПутейCommonФильтр = Новый Массив;
		МассивПутейCommonФильтр.Добавить(Путь_83_32_common);
		МассивПутейCommonФильтр.Добавить(Путь_82_32_common);
		
	ИначеЕсли Разрядность = ПредопределенноеЗначение("Перечисление.Ар_Разрядность.x64_Приоритет") Тогда
		
		МассивПоРазрядности = Новый Массив;
		МассивПоРазрядности.Добавить(Путь_83_64);
		МассивПоРазрядности.Добавить(Путь_83_32);
		МассивПоРазрядности.Добавить(Путь_82_32);
		
		МассивПутейCommonФильтр = Новый Массив;
		МассивПутейCommonФильтр.Добавить(Путь_83_64_common);
		МассивПутейCommonФильтр.Добавить(Путь_83_32_common);
		МассивПутейCommonФильтр.Добавить(Путь_82_32_common);
		
	ИначеЕсли Разрядность = ПредопределенноеЗначение("Перечисление.Ар_Разрядность.x86_Приоритет") Тогда
		
		МассивПоРазрядности = Новый Массив;
		МассивПоРазрядности.Добавить(Путь_83_32);
		МассивПоРазрядности.Добавить(Путь_82_32);
		МассивПоРазрядности.Добавить(Путь_83_64);
		
		МассивПутейCommonФильтр = Новый Массив;
		МассивПутейCommonФильтр.Добавить(Путь_83_32_common);
		МассивПутейCommonФильтр.Добавить(Путь_82_32_common);
		МассивПутейCommonФильтр.Добавить(Путь_83_64_common);
		
	КонецЕсли;
	
	Для Каждого ПутьПоРазрядности Из МассивПоРазрядности Цикл
		Для Каждого Файл Из МассивПутей Цикл
			Если СтрНайти(Файл.Путь, ПутьПоРазрядности) > 0 Тогда
				МассивПутейФильтр.Добавить(Файл);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого ПутьПоРазрядности Из МассивПутейCommonФильтр Цикл
		
		Файл = Новый Файл(ПутьПоРазрядности);
		
		Если Файл.Существует() Тогда
			МассивПутейCommon.Добавить(Файл);
		КонецЕсли;
		
	КонецЦикла;
	
	МассивПутей = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(МассивПутей, МассивПутейФильтр);
	
	Источник 				= Новый Массив;

	Если МассивПутей.Количество() = 1 Тогда
		Источник = МассивПутей;
	Иначе
		Источник = МассивПутейCommon;
	КонецЕсли;
	
	Если Источник.Количество() > 0 Тогда
		Путь = Источник[0].ПолноеИмя;
	КонецЕсли;
	
	Возврат Путь
	
КонецФункции

#КонецОбласти
